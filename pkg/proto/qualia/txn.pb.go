// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: qualia/txn.proto

package qualia

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Txn_Type int32

const (
	Txn_FREE    Txn_Type = 0
	Txn_BLOCKED Txn_Type = 1
)

// Enum value maps for Txn_Type.
var (
	Txn_Type_name = map[int32]string{
		0: "FREE",
		1: "BLOCKED",
	}
	Txn_Type_value = map[string]int32{
		"FREE":    0,
		"BLOCKED": 1,
	}
)

func (x Txn_Type) Enum() *Txn_Type {
	p := new(Txn_Type)
	*p = x
	return p
}

func (x Txn_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Txn_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_qualia_txn_proto_enumTypes[0].Descriptor()
}

func (Txn_Type) Type() protoreflect.EnumType {
	return &file_qualia_txn_proto_enumTypes[0]
}

func (x Txn_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Txn_Type.Descriptor instead.
func (Txn_Type) EnumDescriptor() ([]byte, []int) {
	return file_qualia_txn_proto_rawDescGZIP(), []int{0, 0}
}

type Txn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxnId uint64 `protobuf:"varint,1,opt,name=txn_id,json=txnId,proto3" json:"txn_id,omitempty"`
	// Use Lookup service before execute
	ReadSet      []*KeyEntry `protobuf:"bytes,20,rep,name=read_set,json=readSet,proto3" json:"read_set,omitempty"`
	WriteSet     []*KeyEntry `protobuf:"bytes,21,rep,name=write_set,json=writeSet,proto3" json:"write_set,omitempty"`
	ReadWriteSet []*KeyEntry `protobuf:"bytes,22,rep,name=read_write_set,json=readWriteSet,proto3" json:"read_write_set,omitempty"`
	// Use Lookup service before execute
	Readers []uint64 `protobuf:"varint,30,rep,packed,name=readers,proto3" json:"readers,omitempty"`
	Writers []uint64 `protobuf:"varint,31,rep,packed,name=writers,proto3" json:"writers,omitempty"`
	TxnType Txn_Type `protobuf:"varint,40,opt,name=txn_type,json=txnType,proto3,enum=qualia.Txn_Type" json:"txn_type,omitempty"`
}

func (x *Txn) Reset() {
	*x = Txn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qualia_txn_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Txn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Txn) ProtoMessage() {}

func (x *Txn) ProtoReflect() protoreflect.Message {
	mi := &file_qualia_txn_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Txn.ProtoReflect.Descriptor instead.
func (*Txn) Descriptor() ([]byte, []int) {
	return file_qualia_txn_proto_rawDescGZIP(), []int{0}
}

func (x *Txn) GetTxnId() uint64 {
	if x != nil {
		return x.TxnId
	}
	return 0
}

func (x *Txn) GetReadSet() []*KeyEntry {
	if x != nil {
		return x.ReadSet
	}
	return nil
}

func (x *Txn) GetWriteSet() []*KeyEntry {
	if x != nil {
		return x.WriteSet
	}
	return nil
}

func (x *Txn) GetReadWriteSet() []*KeyEntry {
	if x != nil {
		return x.ReadWriteSet
	}
	return nil
}

func (x *Txn) GetReaders() []uint64 {
	if x != nil {
		return x.Readers
	}
	return nil
}

func (x *Txn) GetWriters() []uint64 {
	if x != nil {
		return x.Writers
	}
	return nil
}

func (x *Txn) GetTxnType() Txn_Type {
	if x != nil {
		return x.TxnType
	}
	return Txn_FREE
}

type KeyEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Master  uint32 `protobuf:"varint,2,opt,name=master,proto3" json:"master,omitempty"`
	Counter uint64 `protobuf:"varint,3,opt,name=counter,proto3" json:"counter,omitempty"`
}

func (x *KeyEntry) Reset() {
	*x = KeyEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qualia_txn_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyEntry) ProtoMessage() {}

func (x *KeyEntry) ProtoReflect() protoreflect.Message {
	mi := &file_qualia_txn_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyEntry.ProtoReflect.Descriptor instead.
func (*KeyEntry) Descriptor() ([]byte, []int) {
	return file_qualia_txn_proto_rawDescGZIP(), []int{1}
}

func (x *KeyEntry) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *KeyEntry) GetMaster() uint32 {
	if x != nil {
		return x.Master
	}
	return 0
}

func (x *KeyEntry) GetCounter() uint64 {
	if x != nil {
		return x.Counter
	}
	return 0
}

var File_qualia_txn_proto protoreflect.FileDescriptor

var file_qualia_txn_proto_rawDesc = []byte{
	0x0a, 0x10, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x61, 0x2f, 0x74, 0x78, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x61, 0x22, 0xb0, 0x02, 0x0a, 0x03, 0x54,
	0x78, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x78, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x74, 0x78, 0x6e, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x08, 0x72, 0x65, 0x61,
	0x64, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x71, 0x75,
	0x61, 0x6c, 0x69, 0x61, 0x2e, 0x4b, 0x65, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x72,
	0x65, 0x61, 0x64, 0x53, 0x65, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f,
	0x73, 0x65, 0x74, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x71, 0x75, 0x61, 0x6c,
	0x69, 0x61, 0x2e, 0x4b, 0x65, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x53, 0x65, 0x74, 0x12, 0x36, 0x0a, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x71, 0x75, 0x61, 0x6c, 0x69, 0x61, 0x2e, 0x4b, 0x65, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0c, 0x72, 0x65, 0x61, 0x64, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07,
	0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x2b, 0x0a, 0x08, 0x74, 0x78, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x61, 0x2e, 0x54, 0x78, 0x6e,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x74, 0x78, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x1d,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x52, 0x45, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x01, 0x22, 0x4e, 0x0a,
	0x08, 0x4b, 0x65, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x42, 0x7b, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x2e, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x61, 0x42, 0x08, 0x54, 0x78, 0x6e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x61, 0x63, 0x68, 0x75, 0x6e, 0x77, 0x75, 0x2f, 0x71, 0x75, 0x61,
	0x6c, 0x69, 0x61, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x71, 0x75,
	0x61, 0x6c, 0x69, 0x61, 0xa2, 0x02, 0x03, 0x51, 0x58, 0x58, 0xaa, 0x02, 0x06, 0x51, 0x75, 0x61,
	0x6c, 0x69, 0x61, 0xca, 0x02, 0x06, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x61, 0xe2, 0x02, 0x12, 0x51,
	0x75, 0x61, 0x6c, 0x69, 0x61, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x06, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_qualia_txn_proto_rawDescOnce sync.Once
	file_qualia_txn_proto_rawDescData = file_qualia_txn_proto_rawDesc
)

func file_qualia_txn_proto_rawDescGZIP() []byte {
	file_qualia_txn_proto_rawDescOnce.Do(func() {
		file_qualia_txn_proto_rawDescData = protoimpl.X.CompressGZIP(file_qualia_txn_proto_rawDescData)
	})
	return file_qualia_txn_proto_rawDescData
}

var file_qualia_txn_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_qualia_txn_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_qualia_txn_proto_goTypes = []interface{}{
	(Txn_Type)(0),    // 0: qualia.Txn.Type
	(*Txn)(nil),      // 1: qualia.Txn
	(*KeyEntry)(nil), // 2: qualia.KeyEntry
}
var file_qualia_txn_proto_depIdxs = []int32{
	2, // 0: qualia.Txn.read_set:type_name -> qualia.KeyEntry
	2, // 1: qualia.Txn.write_set:type_name -> qualia.KeyEntry
	2, // 2: qualia.Txn.read_write_set:type_name -> qualia.KeyEntry
	0, // 3: qualia.Txn.txn_type:type_name -> qualia.Txn.Type
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_qualia_txn_proto_init() }
func file_qualia_txn_proto_init() {
	if File_qualia_txn_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_qualia_txn_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Txn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qualia_txn_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_qualia_txn_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_qualia_txn_proto_goTypes,
		DependencyIndexes: file_qualia_txn_proto_depIdxs,
		EnumInfos:         file_qualia_txn_proto_enumTypes,
		MessageInfos:      file_qualia_txn_proto_msgTypes,
	}.Build()
	File_qualia_txn_proto = out.File
	file_qualia_txn_proto_rawDesc = nil
	file_qualia_txn_proto_goTypes = nil
	file_qualia_txn_proto_depIdxs = nil
}
